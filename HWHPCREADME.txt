СДЕЛАНО СДЕЛАНО СДЕЛАНО СДЕЛАНО СДЕЛАНО 
________

Домашнее задание №1: ДЗ-1

50% На основании данных рейтинга top500 спрогнозировать  производительность компьютера №1 в 2025

50% оцените какой процент всего производимого на Земле электричества потребляют все компьютеры из top500 (на основании открытых данных top500.org)

10% Бонус: Улучшить производительность программы с реализацией алгоритма матричного умножения (сниппет https://bit.ly/339RAhp )
 
 
_______________________________________________________________________________

Домашнее задание №3: ДЗ-3

Cheat sheet on OpenMP: https://www.openmp.org/wp-content/uploads/OpenMP-4.0-C.pdf​

Gists: https://gist.github.com/ssstuvz/574c3d1eb663980a5487af2e773d2460

Скачайте код, скомпилируйте:
$ <cc> <codefile.c> -o <executable> -fopenmp
Укажите компилятор (cc), например, gcc для .c файлов в Ubuntu.
Как запустить код:
$ ./<executable>

1. Демонстрационные файлы – работающие примеры кодов для понимания OpenMP. Эти задания не оцениваются.

    omp_hello.c – простейшая программа печатающая ‘Hello world’. Введение в конструкцию ‘parallel’. Задание: а) научитесь вручную менять кол-во нитей, исполняемых в программе путем изменения переменной окружения:
    $ export OMP_NUM_THREADS=<number you want>.
    b) научитесь задавать кол-во нитей внутри программы.
    omp_outmes.cpp – сравнение параллельного I/O C и C++. Пример на понимания понятия “threadsafe”. Пример конструкции critical. Компиляция:
    $ g++ OutMes.cpp -o <executable> -fopenmp
    omp_privateshared.c – пример общих и приватных переменных, конструкции ‘for’. Задание: запустите программу, разберитесь, что делают все команды с #pragma.
    omp_parsec.c – пример использования конструкции section. Задание: перед запуском, попытайтесь угадать вывод программы, потом проверьте.
    omp_sumarray.c – пример использования редукции. Обратите внимание на конструкцию #pragma omp parallel for – в чем разница между этой конструкцией и #pragma omp parallel … #pragma omp for

2. Программы с багами – примеры программ, которые надо починить.

    omp_bugreduction.c – код для скалярного произведения двух векторов. Дополнить функцию dotprod, проверить баги в #pragma omp, проверить результат. (20 %)
    omp_bugparfor.c –Найти и устранить ошибки. (20 %)


3. Написать параллельную программу, использующую метод Монте-Карло для оценки числа pi. Случайным образом (аккуратнее с генератором случайных чисел! Пример в лекции) кидаете точку в единичный квадрат. В этот же квадрат вписан круг. Если точка попала в круг, увеличиваете счетчик. Затем находите отношение точек, попавших в круг к общему числу точек. Зная площади квадрата и круга, находите приблизительно число pi. (60 %)

Note: clock() measures the sum of wall clocks across all threads. Use omp_get_wtime() instead (it returns value in seconds).


Домашнее задание №5: ДЗ-5

    НЕ СДЕЛАНО
    Знакомство в компании
    Представим, что процессы – это компания незнакомых людей, которые знакомятся с помощью следующей игры:
    1) Начинает процессор 0. Случайным образом он выбирает другой процессор i и посылает ему сообщение со своим именем (можете случайным образом задавать имя)
    2) Процессор i отсылает сообщение случайному процессору j (которые еще не участвовал в игре), в сообщении – все имена и ранги предыдущих процессоров в правильном порядке. Номер процессора j знает только I, так что все должны быть начеку.
    3) Игра заканчивается через N ходов. Используйте синхронную пересылку MPI_SSend
    Напишите программу используя MPI. (25 баллов)
    

Параллельный одномерный клеточный автомат.
    С помощью MPI распараллельте одномерный клеточный автомат Вольфрама (Rule110).
    Игра происходит следующим образом:
    1) Инициализируйте одномерный массив 0 и 1 случайным образом
    2) В зависимости от значений: левого соседа, себя, правого соседа на следующем шаге клетка либо меняет значение, либо остается той же. Посмотрите, например, что значит Rule110 (https://en.wikipedia.org/wiki/Rule_110)
    Сделайте периодические и непериодические граничные условия (5 баллов)
    Работает параллельный код на нескольких процессах (20 баллов)
    Имплементированы клетки-призраки (ghost cells) (10 балла)
    Можно поменять правило игры (сделать одно из 256) (20 баллов)
    График ускорения работы программы от кол-ва процессов (5 баллов)
    Картинка эволюции для одного правила (15 баллов)
    Итого баллов: 75  + 25 = 100 баллов за базовую часть из 2 заданий


     
    Бонус Параллельная игра «Жизнь» (*) 20 баллов
    Распараллельте игру «Жизнь» Конвея (https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life)
    Бонус Война и Мир (*) 10 баллов
    С помощью работы на нескольких процессах (MPI) найдите топ-10 встречающихся слов в романе «Война и Мир» Л.Н. Толстого
    














НЕ СДЕЛАНО НЕ СДЕЛАНО  НЕ СДЕЛАНО  НЕ СДЕЛАНО  НЕ СДЕЛАНО  
_______________________________________________________________________________    
Домашнее задание №6: ДЗ-6

1. Размытие картинки и "Median filter"
Возьмите произвольную картинку (цветную или черно-белую).

а) Фильтр по шаблону (25 баллов). В каждом пикселе картинки надо усреднить по шаблону с коэффициентами в окрестности данного пикселя. Например, для шаблона 5x5:
 


for(int k=-2;k<=2; k++)
{
    for(int l=-2; l<=2; l++)
    {
        u[i][j]+=1/s*a[k][l]*u[i+k][j+l];
    }
}
// s = сумма всех коэффициентов шаблона (25 значений для 5x5)

 

 

Продемонстрируйте результат размытия для 2 разных шаблонов.

б) Median filter (25 баллов)
Имплементируйте https://en.wikipedia.org/wiki/Median_filter на CUDA

2. Гистограмма картинки
Загрузите или создайте картинку (если она цветная можете конвертировать в grayscale или сделать гистограмму для каждого канала), сделайте гистограмму по яркости. (50 баллов)

